// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using OnlineBookstore.Context;

#nullable disable

namespace OnlineBookstore.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20240507101312_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("OnlineBookstore.Entities.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Author = "Deshaun Murazik",
                            Price = 46.90m,
                            Title = "Incredible Plastic Tuna"
                        },
                        new
                        {
                            Id = 2,
                            Author = "Cedrick Kuphal",
                            Price = 58.08m,
                            Title = "Refined Fresh Bacon"
                        },
                        new
                        {
                            Id = 3,
                            Author = "Marilou Hartmann",
                            Price = 57.46m,
                            Title = "Awesome Steel Bacon"
                        },
                        new
                        {
                            Id = 4,
                            Author = "Myles Berge",
                            Price = 46.43m,
                            Title = "Unbranded Cotton Mouse"
                        },
                        new
                        {
                            Id = 5,
                            Author = "Cleveland Abernathy",
                            Price = 50.29m,
                            Title = "Practical Frozen Towels"
                        },
                        new
                        {
                            Id = 6,
                            Author = "Beau Dach",
                            Price = 28.87m,
                            Title = "Sleek Wooden Shirt"
                        },
                        new
                        {
                            Id = 7,
                            Author = "Ayden Jast",
                            Price = 72.78m,
                            Title = "Small Metal Cheese"
                        },
                        new
                        {
                            Id = 8,
                            Author = "Jessyca Mosciski",
                            Price = 88.75m,
                            Title = "Incredible Granite Sausages"
                        },
                        new
                        {
                            Id = 9,
                            Author = "Hattie Streich",
                            Price = 11.43m,
                            Title = "Refined Plastic Pants"
                        },
                        new
                        {
                            Id = 10,
                            Author = "Eugenia Oberbrunner",
                            Price = 36.51m,
                            Title = "Generic Wooden Shirt"
                        },
                        new
                        {
                            Id = 11,
                            Author = "Linwood Effertz",
                            Price = 92.41m,
                            Title = "Handmade Rubber Towels"
                        },
                        new
                        {
                            Id = 12,
                            Author = "Kaylin Hansen",
                            Price = 69.92m,
                            Title = "Licensed Fresh Towels"
                        },
                        new
                        {
                            Id = 13,
                            Author = "Burdette Williamson",
                            Price = 75.41m,
                            Title = "Practical Plastic Chair"
                        },
                        new
                        {
                            Id = 14,
                            Author = "Esperanza Altenwerth",
                            Price = 25.42m,
                            Title = "Awesome Concrete Shirt"
                        },
                        new
                        {
                            Id = 15,
                            Author = "Jaida Hartmann",
                            Price = 44.72m,
                            Title = "Incredible Concrete Chair"
                        },
                        new
                        {
                            Id = 16,
                            Author = "Reed Dickens",
                            Price = 42.63m,
                            Title = "Tasty Granite Tuna"
                        },
                        new
                        {
                            Id = 17,
                            Author = "Ciara Ratke",
                            Price = 96.32m,
                            Title = "Sleek Fresh Cheese"
                        },
                        new
                        {
                            Id = 18,
                            Author = "Chanel Dietrich",
                            Price = 18.61m,
                            Title = "Rustic Steel Keyboard"
                        },
                        new
                        {
                            Id = 19,
                            Author = "Marilyne Monahan",
                            Price = 35.35m,
                            Title = "Small Frozen Car"
                        },
                        new
                        {
                            Id = 20,
                            Author = "Sonny Reynolds",
                            Price = 81.71m,
                            Title = "Sleek Steel Soap"
                        });
                });

            modelBuilder.Entity("OnlineBookstore.Entities.Sale", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric");

                    b.Property<int>("BookId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("SaleDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.ToTable("Sales");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = 25.15m,
                            BookId = 12,
                            SaleDate = new DateTime(2024, 4, 19, 21, 15, 50, 535, DateTimeKind.Utc).AddTicks(8654)
                        },
                        new
                        {
                            Id = 2,
                            Amount = 39.81m,
                            BookId = 4,
                            SaleDate = new DateTime(2023, 8, 22, 8, 11, 53, 182, DateTimeKind.Utc).AddTicks(3720)
                        },
                        new
                        {
                            Id = 3,
                            Amount = 90.05m,
                            BookId = 12,
                            SaleDate = new DateTime(2023, 12, 19, 6, 52, 54, 583, DateTimeKind.Utc).AddTicks(3147)
                        },
                        new
                        {
                            Id = 4,
                            Amount = 39.52m,
                            BookId = 20,
                            SaleDate = new DateTime(2024, 3, 1, 10, 10, 0, 600, DateTimeKind.Utc).AddTicks(6904)
                        },
                        new
                        {
                            Id = 5,
                            Amount = 45.98m,
                            BookId = 10,
                            SaleDate = new DateTime(2024, 3, 26, 16, 23, 56, 276, DateTimeKind.Utc).AddTicks(4058)
                        },
                        new
                        {
                            Id = 6,
                            Amount = 76.89m,
                            BookId = 3,
                            SaleDate = new DateTime(2024, 3, 27, 3, 29, 22, 46, DateTimeKind.Utc).AddTicks(8473)
                        },
                        new
                        {
                            Id = 7,
                            Amount = 71.01m,
                            BookId = 9,
                            SaleDate = new DateTime(2024, 1, 23, 1, 17, 20, 508, DateTimeKind.Utc).AddTicks(2690)
                        },
                        new
                        {
                            Id = 8,
                            Amount = 65.35m,
                            BookId = 18,
                            SaleDate = new DateTime(2024, 3, 13, 16, 12, 22, 276, DateTimeKind.Utc).AddTicks(3084)
                        },
                        new
                        {
                            Id = 9,
                            Amount = 24.76m,
                            BookId = 20,
                            SaleDate = new DateTime(2023, 7, 28, 7, 49, 13, 428, DateTimeKind.Utc).AddTicks(6594)
                        },
                        new
                        {
                            Id = 10,
                            Amount = 25.09m,
                            BookId = 19,
                            SaleDate = new DateTime(2023, 7, 2, 14, 24, 33, 654, DateTimeKind.Utc).AddTicks(8912)
                        },
                        new
                        {
                            Id = 11,
                            Amount = 25.12m,
                            BookId = 20,
                            SaleDate = new DateTime(2024, 2, 25, 2, 49, 46, 487, DateTimeKind.Utc).AddTicks(7931)
                        },
                        new
                        {
                            Id = 12,
                            Amount = 73.80m,
                            BookId = 20,
                            SaleDate = new DateTime(2024, 5, 2, 0, 52, 43, 223, DateTimeKind.Utc).AddTicks(3727)
                        },
                        new
                        {
                            Id = 13,
                            Amount = 24.55m,
                            BookId = 10,
                            SaleDate = new DateTime(2024, 3, 6, 16, 24, 45, 731, DateTimeKind.Utc).AddTicks(825)
                        },
                        new
                        {
                            Id = 14,
                            Amount = 25.48m,
                            BookId = 7,
                            SaleDate = new DateTime(2024, 1, 2, 5, 44, 52, 421, DateTimeKind.Utc).AddTicks(5119)
                        },
                        new
                        {
                            Id = 15,
                            Amount = 44.18m,
                            BookId = 13,
                            SaleDate = new DateTime(2023, 8, 22, 8, 45, 17, 191, DateTimeKind.Utc).AddTicks(6742)
                        },
                        new
                        {
                            Id = 16,
                            Amount = 46.80m,
                            BookId = 14,
                            SaleDate = new DateTime(2023, 8, 29, 6, 24, 49, 754, DateTimeKind.Utc).AddTicks(7133)
                        },
                        new
                        {
                            Id = 17,
                            Amount = 28.09m,
                            BookId = 3,
                            SaleDate = new DateTime(2023, 8, 17, 13, 38, 8, 66, DateTimeKind.Utc).AddTicks(1948)
                        },
                        new
                        {
                            Id = 18,
                            Amount = 38.66m,
                            BookId = 9,
                            SaleDate = new DateTime(2023, 7, 2, 10, 24, 0, 641, DateTimeKind.Utc).AddTicks(6425)
                        },
                        new
                        {
                            Id = 19,
                            Amount = 85.91m,
                            BookId = 17,
                            SaleDate = new DateTime(2023, 11, 27, 6, 48, 29, 613, DateTimeKind.Utc).AddTicks(538)
                        },
                        new
                        {
                            Id = 20,
                            Amount = 39.10m,
                            BookId = 16,
                            SaleDate = new DateTime(2024, 4, 27, 18, 33, 14, 739, DateTimeKind.Utc).AddTicks(4718)
                        });
                });

            modelBuilder.Entity("OnlineBookstore.Entities.Sale", b =>
                {
                    b.HasOne("OnlineBookstore.Entities.Book", "Book")
                        .WithMany()
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");
                });
#pragma warning restore 612, 618
        }
    }
}
